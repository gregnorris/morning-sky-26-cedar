%h2
  Deliveries Stats Report
  - from_date = params[:report_start_date]
  - to_date = params[:report_end_date]
  = "(From: #{from_date} To: #{to_date})"
  

- recipients = Delivery::total_households_served(from_date, to_date)
- num_total_deliveries = Delivery.for_delivery_date_range(from_date, to_date).was_delivered_to.compact.size

%b
  Total number of deliveries: 
= num_total_deliveries
= " (unique households served: #{recipients.size})"
%br

- num_total_recipients = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.size}
%b
  Total Unique People served (including family members): 
= num_total_recipients
%br
%br


%b
  Total number of households furniture was picked up from: 
- num_total_pickups = DonorPickup.picked_up_between(from_date, to_date).was_pickedup.compact.size
= num_total_pickups

- num_unique_household_pickups = Donor::total_households_that_donated_items(from_date, to_date)
= " (unique households picked up from: #{num_unique_household_pickups})"

%br
%br
Breakdown of Age Ranges:
%br
- recipients_zero_to_fourteen = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.zero_to_fourteen.size}
%b
  0-14 &nbsp;: 
= recipients_zero_to_fourteen
%br
- recipients_fifteen_to_thirty = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.fifteen_to_thirty.size}
%b
  15-30: 
= recipients_fifteen_to_thirty
%br
- recipients_thirtyone_to_sixtyfour = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.thirtyone_to_sixtyfour.size}
%b
  31-64: 
= recipients_thirtyone_to_sixtyfour
%br
- recipients_sixtyfive_plus = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.sixtyfive_plus.size}
%b
  65+ &nbsp; : 
= recipients_sixtyfive_plus
%br
- recipients_with_no_age = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.with_no_age.size}
%b
  age not given &nbsp; : 
= recipients_with_no_age


%br
%br
Breakdown of Gender:
%br
%b
  Male: 
- recipients_male = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.males.size}
= recipients_male
%br
%b
  Female: 
- recipients_female = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.females.size}
= recipients_female

%br
%br
Breakdown of Other Categories:
%br
%b
  Aboriginal: 
- recipients_aboriginals = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.aboriginals.size}
= recipients_aboriginals
%br
- recipients_recent_immigrants = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.recent_immigrants.size}
%b
  Recent Immigrant: 
= recipients_recent_immigrants
%br
- recipients_not_aboriginal_or_recent_immigrants = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.not_aboriginal_or_recent_immigrants.size}
%b
  Neither Aborinal nor a Recent Immigrant: 
= recipients_not_aboriginal_or_recent_immigrants
%br
- recipients_disabled_people = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.disabled_people.size}
%b
  Disabled: 
= recipients_disabled_people

%br
%br
Family Characteristics:
%br
%b
  Number of adults without dependent children: 
- recipients_not_parents = recipients.inject(0) {|res_sum, recip| res_sum + recip.residents.not_parents.size}
= recipients_not_parents
%br
%br
%b
  Families with children: 
%br
  One adult with child(ren): 
-# if there is only 1 of this recipient's residents that is a parent, then it's a single parent family
- recipients_single_parents = recipients.inject(0) {|res_sum, recip| res_sum + (recip.residents.parents.size == 1 ? 1 : 0)}
=recipients_single_parents
%br
  Two parent family: 
-# if 2 of this recipient's residents are parents, then it's a 2 parent family
- recipients_two_parents = recipients.inject(0) {|res_sum, recip| res_sum + (recip.residents.parents.size > 1 ? 1 : 0)}
=recipients_two_parents

%b



